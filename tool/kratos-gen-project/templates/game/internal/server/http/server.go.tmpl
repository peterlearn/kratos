package http

import (
	pb "{{.ModPrefix}}{{.Name}}/api"
	"{{.ModPrefix}}{{.Name}}/internal/model"
	"gitlab.com/firerocksg/xy3-kratos/pkg/conf/paladin"
	cfg "gitlab.com/firerocksg/xy3-kratos/pkg/net/http/config"
	kgin "gitlab.com/firerocksg/xy3-kratos/pkg/net/http/gin"
	"github.com/gin-gonic/gin"
)

var svc pb.DemoServer

// New new a bm server.
func New(s pb.DemoServer) (engine *gin.Engine, err error) {
	var (
		cfg cfg.ServerConfig
		ct paladin.TOML
	)
	if err = paladin.Get("http.toml").Unmarshal(&ct); err != nil {
		return
	}
	if err = ct.Get("Server").UnmarshalTOML(&cfg); err != nil {
		return
	}
	svc = s
	engine = kgin.DefaultServer(&cfg)
	pb.RegisterDemoGinServer(engine, s)
	initRouter(engine)
	kgin.Start(engine)
	return
}

func initRouter(e *gin.Engine) {
	g := e.Group("/{{.Name}}")
	{
		g.GET("/start", howToStart)
	}
}

// example for http request handler.
func howToStart(c *gin.Context) {
	k := &model.Kratos{
		Hello: "Golang 大法好 !!!",
	}
	c.JSON(200, k)
}