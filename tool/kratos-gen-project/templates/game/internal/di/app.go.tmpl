package di

import (
	"context"
	"time"

	"{{.ModPrefix}}{{.Name}}/internal/service"

	"gitlab.com/firerocksg/xy3-kratos/pkg/log"
	kgin "gitlab.com/firerocksg/xy3-kratos/pkg/net/http/gin"
	"github.com/gin-gonic/gin"
	"git.huoys.com/middle-end/library/pkg/net/comet"
)

//go:generate kratos tool wire
type App struct {
	svc *service.Service
	http *gin.Engine
	tcp *comet.Server
}

func NewApp(svc *service.Service, h *gin.Engine, c *comet.Server) (app *App, closeFunc func(), err error){
	app = &App{
		svc: svc,
		http: h,
		tcp: c,
	}
	closeFunc = func() {
		ctx, cancel := context.WithTimeout(context.Background(), 35*time.Second)
        if err := kgin.Shutdown(h, ctx); err != nil {
            log.Error("httpSrv.Shutdown error(%v)", err)
        }
		svc.Close()
		cancel()
		log.Info("httpSrv.Shutdown")
	}
	return
}
